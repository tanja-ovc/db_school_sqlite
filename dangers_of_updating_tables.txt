Переименование таблицы:
_______________________________________________________
ALTER TABLE <имя таблицы> RENAME TO <новое имя таблицы>;
-------------------------------------------------------

Добавление колонки:
______________________________________
ALTER TABLE <название таблицы> 
ADD COLUMN <имя колонки> <тип колонки>;
--------------------------------------
NB! По умолчанию SQLite добавляет новую колонку в конец списка колонок.

Удаление колонки:
В классическом SQL сработает вот такая конструкция:
______________________________
ALTER TABLE <название таблицы>
DROP COLUMN <имя колонки>;
------------------------------

Но в SQLite удаление колонок доступно только с версии 3.35.0.
Для более старых версий для удаления колонки приходится идти сложным путём:
- Создать копию таблицы, но без той колонки, которую нужно удалить.
- Перенести в новую таблицу информацию из исходной таблицы.
- Удалить исходную таблицу.
- Переименовать созданную.

См. также https://www.sqlite.org/lang_altertable.html

Удаление таблицы:
________________________
DROP TABLE <имя таблицы>;
------------------------


При изменении первичных и внешних ключей важно соблюдать ссылочную целостность данных (referential integrity).
Основная идея в том, что бы не было «битых», ведущих в никуда, ссылок на другие таблицы.

Вот примеры нарушений целостности данных:
-- Аномалия удаления (deletion anomaly) --
Если из таблицы удалена строка, на которую ссылается внешний ключ.

-- Аномалия вставки (insertion anomaly) --
Если добавлена запись с внешним ключом, но этот внешний ключ не соответствует ни одному первичному ключу из
связанной таблицы.

-- Аномалии обновления (update anomaly) --
При изменении данных в одной строке они могут прийти в противоречие с данными из другой строки:
например, изменён PK, на который ссылкется FK из другой таблицы.
